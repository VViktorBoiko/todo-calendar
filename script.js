async function generateCalendar() {
    let calendar = document.getElementById("calendar");
    calendar.innerHTML = "";

    let daysInMonth = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();
    
    // 1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ —Å –±—ç–∫–µ–Ω–¥–∞
    let tasksByDate = await fetchTasks();

    for (let i = 1; i <= daysInMonth; i++) {
        let day = document.createElement("div");
        day.className = "day";
        day.innerText = i;

        let dateStr = formatDate(i); // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –ø–æ–¥ API

        // 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–¥–∞—á–∏ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å
        if (tasksByDate[dateStr]) {
            day.classList.add("has-tasks"); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å (CSS)
        }

        // 3Ô∏è‚É£ –ü—Ä–∏ –∫–ª–∏–∫–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∑–∞–¥–∞—á–∞–º–∏
        day.onclick = () => window.location.href = `day.html?date=${dateStr}`;

        calendar.appendChild(day);
    }
}

// üü¢ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á —Å API
async function fetchTasks() {
    try {
        let response = await fetch("https://todo-calendar-backend-production.up.railway.app/tasks");
        let tasks = await response.json();
        
        let tasksByDate = {};
        tasks.forEach(task => {
            if (!tasksByDate[task.date]) {
                tasksByDate[task.date] = [];
            }
            tasksByDate[task.date].push(task);
        });

        return tasksByDate;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á:", error);
        return {};
    }
}

// üü¢ –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã (YYYY-MM-DD)
function formatDate(day) {
    let year = new Date().getFullYear();
    let month = String(new Date().getMonth() + 1).padStart(2, "0");
    let dayStr = String(day).padStart(2, "0");
    return `${year}-${month}-${dayStr}`;
}

document.addEventListener("DOMContentLoaded", generateCalendar);
